---
import Layout from "../layouts/BaseLayout.astro";
import Link from "../components/Link.astro";
import { readingsData, processTorahReadings, resetReadingsData } from "./data";
import { HebrewCalendar, HDate, Event } from "@hebcal/core";

const props = {
  title: "",
  description: "",
  image: "home",
};

function getSheminiAtzeretDate(year: number) {
  const holidays = HebrewCalendar.getHolidaysForYear(year);
  let sheminiAtzeretDate;

  for (let [hebrewDate, holidayEvents] of Object.entries(holidays)) {
    for (let holidayEvent of holidayEvents) {
      if (holidayEvent.getDesc() === "Shmini Atzeret") {
        sheminiAtzeretDate = holidayEvent.getDate().greg();
        break;
      }
    }
    if (sheminiAtzeretDate) break;
  }
  return sheminiAtzeretDate;
}

const currentYear = new Date().getFullYear();
const currentHebrewYear = new HDate().getFullYear();

let startDate = new HDate(getSheminiAtzeretDate(currentHebrewYear));
let endDate = new HDate(getSheminiAtzeretDate(currentHebrewYear + 1));

resetReadingsData();
processTorahReadings(startDate, endDate);

let currentWeekIndex: number;
const today = new Date();

for (let i = 0; i < readingsData.length; i++) {
  if (new Date(readingsData[i].dateTime) > today) {
    currentWeekIndex = i;
    break;
  }
}
---

<Layout {...props}>
  <style>
    article {
      overflow-y: scroll;
      overscroll-behavior-y: contain;
      scroll-snap-type: y mandatory;
      border: 2px solid var(--surface-4);
      border-radius: var(--radius-3);
      width: var(--size-fluid-10);
    }

    ul[role="list"] {
      height: 15em;
    }

    ul[role="list"] > li {
      scroll-snap-align: start;
      height: 100%;
      display: flex;
      flex-direction: column;
      justify-content: center;
    }
  </style>
  <main>
    <h1>
      <time datetime={`${currentYear}`}>{currentYear}</time> Weekly Scripture Reading
    </h1>
    <article>
      <ul role="list">
        {
          readingsData.map((reading, index) => (
            <li id={index == currentWeekIndex ? `currentWeek` : `week${index}`}>
              {index == currentWeekIndex - 1 ? (
                <span>Last week's portion</span>
              ) : index == currentWeekIndex ? (
                <span>This week's portion</span>
              ) : index == currentWeekIndex + 1 ? (
                <span>Next week's portion</span>
              ) : (
                <time datetime={`${reading.dateTime}`}>{reading.date}</time>
              )}

              <div>
                <h2>{reading.name}</h2>
              </div>

              <ul class="fa-ul">
                <li>
                  <span class="fa-li">
                    <i class="fa-solid fa-scroll-torah" />
                  </span>
                  Torah: {reading.readingSummary}
                </li>
                <li>
                  <span class="fa-li">
                    <i class="fa-solid fa-book-tanakh" />
                  </span>
                  Haftara: {reading.haftara}
                </li>
              </ul>
            </li>
          ))
        }
      </ul>
    </article>
  </main>
</Layout>

<script>
  window.onload = function () {
    const elem = document.getElementById("currentWeek");
    if (elem) {
      // Check if the element exists before calling scrollIntoView
      elem.scrollIntoView();
    }
  };
</script>
