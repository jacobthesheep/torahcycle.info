@import "open-props/style";
@import "open-props/normalize";
@import "open-props/buttons";

/* some CSS styling straight from https://github.com/hexagoncircle/ryan-mulligan-dev */



*,
*::before,
*::after {
    box-sizing: border-box;
}

html {
    block-size: 100%;
    font-family: "RubikVariable", system-ui, sans-serif;
    font-feature-settings: "tnum";
    font-optical-sizing: auto;
}

body {
    margin: 0;
    width: 100%;
    display: flex;
    flex-direction: column;
    gap: var(--size-fluid-5);
}

img,
picture,
video,
canvas,
svg {
    display: block;
    max-width: 100%;
}

p,
li,
h1,
h2,
h3,
h4,
h5,
h6 {
    overflow-wrap: break-word;
    margin-block: 0;
}

h1,
h2,
h3,
h4,
h5,
h6,
blockquote {
    font-family: "ComfortaaVariable", ui-rounded, sans-serif;
    white-space: unset;
    text-wrap: balance;
}

input,
button,
select {
    font: inherit;
}

:is(input, button, a, select) {
    border-radius: var(--radius-2);
    width: fit-content;
}

:is(input, button, a[data-button], select) {
    padding: var(--size-2) var(--size-3);
}

:is(input, button, a, select):is(:focus-visible) {
    outline: 2px solid red;
    outline-offset: 2px;
}


@layer customComponents {
    a[data-button] {
        --button-shadow-color: black;
        font-weight: bold;
        font-size: var(--font-size-2);
        padding: var(--size-2) var(--size-3);
        text-align: center;
        width: fit-content;
        transform: rotateX(0) rotateY(0) rotateZ(0);
        display: inline-block;
        position: relative;
        top: 0;
        left: 0;
        transition: .3s;
        border: var(--border-size-2) solid var(--button-shadow-color);
        box-shadow: 0.5px 1px 0 0 var(--button-shadow-color), 1.5px 2px 0 0 var(--button-shadow-color), 2.5px 3px 0 0 var(--button-shadow-color), 3.5px 4px 0 0 var(--button-shadow-color), 4.5px 5px 0 0 var(--button-shadow-color), 5.5px 6px 0 0 var(--button-shadow-color);
    }

    a[data-button]:hover {
        box-shadow: 0 0 0 0 var(--button-shadow-color), 0 0 0 0 var(--button-shadow-color), 0 0 0 0 var(--button-shadow-color), 0 0 0 0 var(--button-shadow-color), 0 0 0 0 var(--button-shadow-color), 0 0 0 0 var(--button-shadow-color);
        top: 6px;
        left: 5.5px;
        transform: rotateX(5deg) rotateY(3deg) rotateZ(.25deg);
    }
}

header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: var(--size-6);
}

header span a {
    color: initial;
}

header div {
    display: flex;
    align-items: center;
    width: 100%;
}

svg {
    width: var(--size-7);
    height: fit-content;
}

svg g {
    fill: var(--text-1);
}

main,
footer {
    /* --size-fluid-2: clamp(1rem, calc(0.95rem + 0.24vw), 1.13rem);
    --size-fluid-3: clamp(1.5rem, calc(1.43rem + 0.37vw), 1.69rem); */
    --page-max-width: 55ch;
    --page-padding: clamp(var(--size-fluid-2), 6vw, var(--size-fluid-3));
    --full: minmax(var(--page-padding), 1fr);
    --content: min(var(--page-max-width), 100% - var(--page-padding) * 2);
    --popout: minmax(0, 2rem);
    --feature: minmax(0, 5rem);
    display: grid;
    grid-template-columns: [full-start] var(--full) [feature-start] var(--feature) [popout-start] var(--popout) [content-start] var(--content) [content-end] var(--popout) [popout-end] var(--feature) [feature-end] var(--full) [full-end];
}

main>*,
article>*,
footer>* {
    grid-column: content;
}

main>*+* {
    margin-block-start: var(--size-fluid-5);
}

article span {
    scroll-margin: var(--size-5);
}

nav {
    position: fixed;
    bottom: 0;
    left: 0;
    background-color: var(--surface-2);
    width: 100%;
    z-index: 10;
}

nav ul {
    list-style: none;
    display: flex;
    gap: var(--size-7);
    padding: var(--size-3);
    overflow-x: auto;
    scroll-snap-type: x mandatory;
    white-space: nowrap;
}

article {
    --outline-offset: 2px;
    --scrollbar-offset: 4px;
    display: grid;
    grid-column: full;
    grid-template-columns: inherit;
    margin-block-end: calc(var(--size-fluid-1)*-1 - 1ex);
    overflow-y: hidden;
    max-width: 100%;
    overflow-x: scroll;
    overscroll-behavior-x: contain;
    scroll-snap-type: x mandatory;
}

article ul[role="list"] {
    display: flex;
    gap: clamp(var(--page-padding)/2, 4vw, var(--page-padding));
    padding-block: var(--size-fluid-4) calc(var(--size-fluid-4) + 1ex);
    position: relative;
    width: 100%;
}

article ul[role="list"]>li {
    --duration: 250ms;
    flex: 1 0 auto;
    position: relative;
    scroll-snap-align: center;
    inline-size: min(300px + 5vw, 100%);
    border: 2px solid var(--surface-3);
    border-radius: var(--radius-3);
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    overflow: hidden;
    scroll-margin-top: var(--size-fluid-6);
    transition: transform var(--duration);
    padding: var(--size-5);
}

ul {
    list-style-type: none;
    padding-inline-start: 0;
}

footer {
    border-top: 2px dashed var(--surface-2);
    justify-items: center;
    margin-top: auto;
    padding-block: var(--size-5) calc(var(--size-5) + env(safe-area-inset-bottom));
}

article::-webkit-scrollbar {
    background-color: transparent;
    height: 12px;
}

article::-webkit-scrollbar-thumb {
    background-color: transparent
}

article::-webkit-scrollbar:active,
article:hover::-webkit-scrollbar {
    background-color: var(--blue-5);
    box-shadow: inset var(--surface-1) 0 0 0 4px
}

article::-webkit-scrollbar-thumb:active,
article:hover::-webkit-scrollbar-thumb {
    background-color: var(--blue-5);
    border-left: 4px solid var(--surface-1);
    border-right: 4px solid var(--surface-1);
}
